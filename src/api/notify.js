import axios from "axios";

const api = axios.create({
  baseURL: "http://109.73.194.68:5050",
});

api.interceptors.request.use(config => {
  const token = localStorage.getItem('token');
  if (token) {
    config.headers.Authorization = `Bearer ${token}`;
  }
  return config;
});

const logError = (message, data) => {
  console.error(message, data || "");
};

const logWarning = (message, data) => {
  console.warn(message, data || "");
};

export const notifyAPI = {
  connectToFirebase: async (deviceToken) => {
    const payload = { device_token: deviceToken };
    console.log("deviceToken:", deviceToken);
    console.log("üì¶ Payload to backend:", payload);

    try {
      const response = await api.post("/notify/connect-to-firebase", payload);
      console.log("‚úÖ –û—Ç–≤–µ—Ç –æ—Ç —Å–µ—Ä–≤–µ—Ä–∞:", response.data);
      return response.data;
    } catch (error) {
      const errorData = error.response?.data || {};

      // –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –æ—à–∏–±–∫—É –¥—É–±–ª–∏–∫–∞—Ç–∞ –ø–æ —Ç–µ–∫—Å—Ç—É –∏–∑ –æ—Ç–≤–µ—Ç–∞
      if (error.response?.status === 400 && errorData.detail?.includes('already stored')) {
        logWarning("‚ö†Ô∏è –¢–æ–∫–µ–Ω —É–∂–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ, –∏–≥–Ω–æ—Ä–∏—Ä—É–µ–º –æ—à–∏–±–∫—É", errorData);
        return errorData; // –ú–æ–∂–Ω–æ –≤–µ—Ä–Ω—É—Ç—å –æ—à–∏–±–∫—É, —á—Ç–æ–±—ã –∫–æ–¥ –≤—ã—à–µ –ø–æ–Ω–∏–º–∞–ª, —á—Ç–æ —ç—Ç–æ –Ω–µ –∫—Ä–∏—Ç–∏—á–Ω–æ
      }

      logError("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Ç–æ–∫–µ–Ω–∞:", errorData);
      throw error; // –û—Å—Ç–∞–ª—å–Ω—ã–µ –æ—à–∏–±–∫–∏ –ø—Ä–æ–±—Ä–∞—Å—ã–≤–∞–µ–º
    }
  },
};