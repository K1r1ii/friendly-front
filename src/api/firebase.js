// firebase.js

import { initializeApp } from "firebase/app";
import { getMessaging, getToken, onMessage } from "firebase/messaging";

// –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è Firebase
const firebaseConfig = {
  apiKey: "AIzaSyAXe8Kk7SRMvKrlTy0TYfHx5Y27WEB5K_Q",
  authDomain: "friendly-fcm.firebaseapp.com",
  projectId: "friendly-fcm",
  storageBucket: "friendly-fcm.firebasestorage.app",
  messagingSenderId: "G-M35YCWXMNT",
  appId: "1:210160059112:web:aabd4d562c67c24e54ff5d",
};

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Firebase
const app = initializeApp(firebaseConfig);
const messaging = getMessaging(app);

// –ó–∞–ø—Ä–æ—Å —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è –∏ –ø–æ–ª—É—á–µ–Ω–∏–µ FCM —Ç–æ–∫–µ–Ω–∞
export const requestPermissionAndToken = async () => {
  try {
    const permission = await Notification.requestPermission();
    if (permission !== "granted") {
      console.log("–†–∞–∑—Ä–µ—à–µ–Ω–∏–µ –Ω–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –Ω–µ –ø–æ–ª—É—á–µ–Ω–æ");
      return null;
    }

    const token = await getToken(messaging, {
      vapidKey: "BMjdHGiu8fNX87XIMJhx1EEdpipIAHbTMn1-Szkh1yW-hMjYbfkuqMQda9r7Mj4pHFHLX_gSnVRmni_xSUBcXI0",
    });

    console.log("–ü–æ–ª—É—á–µ–Ω FCM —Ç–æ–∫–µ–Ω:", token);
    return token;
  } catch (error) {
    console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è –∏–ª–∏ —Ç–æ–∫–µ–Ω–∞:", error);
    return null;
  }
};

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π –≤ foreground (–∫–æ–≥–¥–∞ –≤–∫–ª–∞–¥–∫–∞ –æ—Ç–∫—Ä—ã—Ç–∞)
export const listenToForegroundMessages = (onNewNotification) => {
  onMessage(messaging, (payload) => {
    console.log("üì© –ü–æ–ª—É—á–µ–Ω–æ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ:", payload);

    const notification = {
      id: payload.data?.id || Date.now(), // ‚úÖ –£–Ω–∏–∫–∞–ª—å–Ω—ã–π ID
      title: payload.notification.title,
      body: payload.notification.body,
      type: payload.data.type,
      senderId: payload.data.sender_id,
      receivedAt: new Date().toISOString()
    };

    // –î–æ–±–∞–≤–ª—è–µ–º –≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç
    onNewNotification(notification);

    // –û–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ: –ø–æ–∫–∞–∑—ã–≤–∞–µ–º native —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
    if (Notification.permission === "granted") {
      new Notification(notification.title, { body: notification.body });
    }
  });
};